[user]
	email = sri@vathsan.com
	name = Srivathsan Murali
[color]
	ui = always
[push]
	default = upstream
[pull]
  rebase=true
[rerere]
    enabled = true
[alias]
  # add
  a = add
  ap = add --patch

  # status
  s = status
  
  # checkout
  co = checkout
  cb = checkout -b

  # diff
  d = diff --color-words
  dx = diff --color-words --cached

  #submodule update
  subpl = submodule update --init --recursive

  # log
  l = log --pretty=custom2
  gr = log --graph --full-history --all --color --date=short --pretty=custom2

  # changelog
  cl= log --color --date=short --oneline --pretty=cl
  log= log --oneline

  # prune
  po = remote prune origin

  # list untracted files
  ls-untracked = ls-files -o --exclude-standard

  # list unmerged files
  open-unmerged = !nvim -p $(git diff --name-status --diff-filter=U)

  # list files which have changed since REVIEW_BASE
  # (REVIEW_BASE defaults to 'master' in my zshrc)
  files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
  
  # Same as above, but with a diff stat instead of just names
  # (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

  # NOTE: These aliases depend on the `git files` alias from
  # a few sections ago!

  # Open all files changed since REVIEW_BASE in Vim tabs
  # Then, run fugitive's :Gdiff in each tab, and finally
  # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
  review = !nvim -p $(git files) +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

  # Same as the above, except specify names of files as arguments,
  # instead of opening all files:
  # git reviewone foo.js bar.js
  reviewone = !vim -p +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

  # get branchname
  branch-name = "!git rev-parse --abbrev-ref HEAD"

  reset-to-upstream = "!git reset --hard origin/$(git branch-name)"

  show-file = "!git-show-file"

[core]
  ignorecase = false
  abbrev = 12

[pretty]
  # h -> abbrev hash
  # d -> head, remote, branch
  # ar -> relative data
  # s -> commit message
  # an -> author
  custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar \n\t%C(green)%s %C(yellow)(%an)"
  #custom2 = "%x1b[31m%h%x09%Cblue%cd%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[0m"
  custom2 = "%C(blue)%as %C(magenta)%h %C(green)%s %C(yellow)[%an] %C(red)%D"
  simplelog = "%C(magenta)%h %C(green)%s %C(yellow)[%an]"
  cl = "%h %s"

[merge]
  tool = vimdiff

[help]
  #correct typos
  autocorrect = 1
[sendemail]
  smtpserver = /usr/bin/msmtp
  smtpserveroption=-a
  smtpserveroption=personal
	annotate = yes

[url "https://aur.archlinux.org/"]
  insteadOf = "aur:"
[url "ssh://aur@aur.archlinux.org/"]
  pushInsteadOf = "aur:"

[url "https://git.sr.ht/"]
  insteadOf = "srht:"
[url "git@git.sr.ht:"]
  pushInsteadOf = "srht:"

[url "https://github.com/"]
  insteadOf = "github:"
[url "git@github.com:"]
  pushInsteadOf = "github:"

[include]
	path = ~/.config/git/secret
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
